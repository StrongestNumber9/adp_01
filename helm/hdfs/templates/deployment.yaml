{{- range tuple "datanode01" "datanode02" "datanode03" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hdfs-{{.}}
  namespace: {{$.Release.Namespace}}
  labels:
    app: hdfs-{{.}}
spec:
  selector:
    matchLabels:
      app: hdfs-{{.}}
  template:
    metadata:
      labels:
        app: hdfs-{{.}}
    spec:
      volumes:
        - name: shareable-hdp-03-configmap
          configMap:
            name: shareable-hdp-03-configmap
        - name: hdfs-entrypoint
          configMap:
            name: hdfs-entrypoint
        - name: hdfs-dfs-{{.}}
          emptyDir:
      hostname: hdfs-{{.}}
      subdomain: tg
      containers:
        - name: hdfs-{{.}}
          image: {{$.Values.image.path}}:{{$.Values.image.version}}
          volumeMounts:
            - mountPath: /opt/teragrep/dfs/
              name: hdfs-dfs-{{.}}
            - mountPath: /config/hdp-03
              name: shareable-hdp-03-configmap
            - mountPath: /entrypoint.sh
              name: hdfs-entrypoint
              subPath: entrypoint-datanode.sh
            - mountPath: /entrypoint-common.sh
              name: hdfs-entrypoint
              subPath: entrypoint-common.sh
          tty: true
          resources:
            requests:
              cpu: "0.001m"
            limits:
              cpu: "{{$.Values.resources.hdfs.datanode.cpu}}"
          env:
          - name: IPA_DOMAIN
            value: {{$.Values.ipa.domain}}
          - name: IPA_PASSWORD
            value: {{$.Values.ipa.password}}
          readinessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "systemctl status datanode"
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "systemctl status datanode"
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          securityContext:
            privileged: {{$.Values.security.privileged}}
{{- end}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hdfs-namenode01
  namespace: {{.Release.Namespace}}
  labels:
    app: hdfs-namenode01
spec:
  selector:
    matchLabels:
      app: hdfs-namenode01
  template:
    metadata:
      labels:
        app: hdfs-namenode01
    spec:
      volumes:
        - name: hdfs-data-namenode01
          emptyDir:
        - name: hdfs-dfs-namenode01
          emptyDir:
        - name: shareable-hdp-03-configmap
          configMap:
            name: shareable-hdp-03-configmap
        - name: hdfs-hdp-04-configmap
          configMap:
            name: hdfs-hdp-04-configmap
        - name: hdfs-entrypoint
          configMap:
            name: hdfs-entrypoint
      hostname: hdfs-namenode01
      subdomain: tg
      containers:
        - name: hdfs-namenode01
          image: {{.Values.image.path}}:{{.Values.image.version}}
          volumeMounts:
            - mountPath: /data
              name: hdfs-data-namenode01
            - mountPath: /opt/teragrep/dfs/
              name: hdfs-dfs-namenode01
            - mountPath: /config/hdp-04
              name: hdfs-hdp-04-configmap
            - mountPath: /config/hdp-03
              name: shareable-hdp-03-configmap
            - mountPath: /entrypoint.sh
              name: hdfs-entrypoint
              subPath: entrypoint-namenode.sh
            - mountPath: /entrypoint-common.sh
              name: hdfs-entrypoint
              subPath: entrypoint-common.sh
          tty: true
          resources:
            requests:
              cpu: "0.001m"
            limits:
              cpu: "{{.Values.resources.hdfs.namenode.cpu}}"
          env:
          - name: IPA_DOMAIN
            value: {{.Values.ipa.domain}}
          - name: IPA_PASSWORD
            value: {{.Values.ipa.password}}
          readinessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "systemctl status namenode"
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "systemctl status namenode"
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          securityContext:
            privileged: {{.Values.security.privileged}}
