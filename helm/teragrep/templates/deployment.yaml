apiVersion: apps/v1
kind: Deployment
metadata:
  name: teragrep
  namespace: {{.Release.Namespace}}
  labels:
    app: teragrep
spec:
  selector:
    matchLabels:
      app: teragrep
  template:
    metadata:
      labels:
        app: teragrep
    spec:
      volumes:
        - name: shareable-hdp-03-configmap
          configMap:
            name: shareable-hdp-03-configmap
        - name: shareable-spk-02-configmap
          configMap:
            name: shareable-spk-02-configmap
        - name: teragrep-notebook-data
          emptyDir:
        - name: teragrep-zep-01-configmap
          configMap:
            name: teragrep-zep-01-configmap
        - name: teragrep-entrypoint
          configMap:
            name: teragrep-entrypoint
        - name: teragrep-notebooks
          configMap:
            name: teragrep-notebooks
      hostname: teragrep
      subdomain: tg
      containers:
        - name: teragrep
          image: {{.Values.containers.teragrep}}
          volumeMounts:
            - mountPath: /config/spk-02
              name: shareable-spk-02-configmap
            - mountPath: /config/hdp-03
              name: shareable-hdp-03-configmap
            - mountPath: /config/teragrep
              name: teragrep-zep-01-configmap
            - mountPath: /entrypoint.sh
              name: teragrep-entrypoint
              subPath: entrypoint.sh
            - mountPath: /notebooks
              name: teragrep-notebooks
            - mountPath: /opt/teragrep/zep_01/notebook
              name: teragrep-notebook-data
          tty: true
          ports:
          - containerPort: 8080
          env:
          - name: IPA_DOMAIN
            value: {{.Values.ipa.domain}}
          - name: IPA_PASSWORD
            value: {{.Values.ipa.password}}
          readinessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "ping -c1 -w1 ipa.{{.Values.ipa.domain}} && curl -s http://127.0.0.1:8080/health/liveness | jq -e 'has(\"dummy\") and select(.dummy.healthy==true)'"
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
              - "/usr/bin/bash"
              - "-c"
              - "ping -c1 -w1 ipa.{{.Values.ipa.domain}} && curl -s http://127.0.0.1:8080/health/liveness | jq -e 'has(\"dummy\") and select(.dummy.healthy==true)'"
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          securityContext:
            privileged: {{.Values.security.privileged}}
